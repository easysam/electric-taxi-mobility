project_path: "C:\\Users\\hkrep\\PycharmProjects\\electric-taxi-mobility"

trajectory:
  raw: "data/history_trajectories.csv"

od:
  raw1407:
    "data/od/od_201407.pqt"
  distance:
    "data/od/od_with_distance_between_before.csv"
  raw1706: "data/od/201706_et_od.csv"
  raw1706_pqt: "data/od/201706_et_od.pqt"

hotspot:
  14et_drop-off: "data/hotspot/full_drop_clusters.list-of_dict_v4"
  14_pick-up: "data/hotspot/f14p.list_of_dict"
  14_drop-off: "data/hotspot/f14d.list_of_dict"

cs:
  val: "result/charging_station/ChargeLocation201706_wgs84.csv"
  val_cdzs: "data/charging_station/chongdianzaishou_wgs84.csv"

mobility:
  transition:
    transition_cost:
      'cube_100_200': "result/mobility/transition/transition_cost_cube_100_200.csv"
    # To simplify transition matrix index from gird ID to range index, using a map mapping grid ID to range index.
    idx_cube_100_200_map: "result/mobility/transition/idx_cube_100_200_map.pkl"
    idx_cube_100_200_inverse_map: "result/mobility/transition/idx_cube_100_200_inverse_map.pkl"
    p2d:
      distance: "result/mobility/transition/p2d_distance.npy"
      duration: "result/mobility/transition/p2d_duration.npy"

      train_feature_all_pairs: "data/mobility/transition/p2d_train_feature_all_pairs.csv"
      train_demands: "data/mobility/transition/p2d_train_demands.pkl"
      val_feature_all_pairs: "data/mobility/transition/p2d_val_feature_all_pairs.csv"
      val_demands: "data/mobility/transition/p2d_val_demands.pkl"
      gt_transition_tensor: "result/mobility/transition/p2d_gt_transition_tensor.npz"
    d2p:
      distance: "result/mobility/transition/d2p_distance.npy"
      duration: "result/mobility/transition/d2p_duration.npy"
      gt_transition_tensor: "result/mobility/transition/d2p_gt_transition_tensor.npz"

    utility_xgboost:
      p2d:
        train_feature: "data/mobility/transition/utility_xgboost/p2d_train_feature.npy"
        train_gt: "data/mobility/transition/utility_xgboost/p2d_train_gt.csv"
        val_od: "data/mobility/transition/utility_xgboost/p2d_val_od.csv"
        val_feature: "data/mobility/transition/utility_xgboost/p2d_val_feature.npy"
        val_gt: "data/mobility/transition/utility_xgboost/p2d_val_gt.csv"
        model: "result/mobility/transition/utility_xgboost/p2d_XGBRegressor.pkl"
        scaler: "result/mobility/transition/utility_xgboost/p2d_StandardScaler.pkl"
        result: "result/mobility/transaction/utility_xgboost/p2d_result.csv"
        prob_mat_incomplete: "data/mobility/transition/utility_xgboost/p2d_prob_mat.csv"
        prob_mat: "result/mobility/transition/utility_xgboost/p2d_prob_mat.npy"

      d2p:
        train_feature: "data/mobility/transition/utility_xgboost/d2p_train_feature.npy"
        train_gt: "data/mobility/transition/utility_xgboost/d2p_train_gt.csv"
        val_od: "data/mobility/transition/utility_xgboost/d2p_val_od.csv"
        val_feature: "data/mobility/transition/utility_xgboost/d2p_val_feature.npy"
        val_gt: "data/mobility/transition/utility_xgboost/d2p_val_gt.csv"
        model: "result/mobility/transition/utility_xgboost/d2p_XGBRegressor.pkl"
        scaler: "result/mobility/transition/utility_xgboost/d2p_StandardScaler.pkl"
        prob_mat_incomplete: "data/mobility/transition/utility_xgboost/d2p_prob_mat.csv"
        prob_mat: "result/mobility/transition/utility_xgboost/d2p_prob_mat.npy"
  charge:
    whether_feature_label: "data/mobility/charge/whether/od_with_traveled_v7.csv"
    whether_xgb: "result/mobility/charge/whether/xgboost.json"
    whether_xgb_scaler: "result/mobility/charge/whether/xgb_scaler.pkl"
    where_feature: "data/mobility/charge/where/where_charge_feature.csv"
    where_label: "data/mobility/charge/where/all_formatted_annotation_distribution_v3.csv"
    where_model: "result/mobility/charge/where/mlp"
  resting: "result/mobility/resting.pkl"
generation:
  schedule: "result/generation/schedule.pkl"
  result: "result/generation/generated_trajectories.parquet"
